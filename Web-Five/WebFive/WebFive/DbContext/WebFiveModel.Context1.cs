//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebFive.DbContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PropertyManagementEntities : DbContext
    {
        public PropertyManagementEntities()
            : base("name=PropertyManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyRecord> CompanyRecords { get; set; }
        public virtual DbSet<DistributionExpense> DistributionExpenses { get; set; }
        public virtual DbSet<ExpensesRecord> ExpensesRecords { get; set; }
        public virtual DbSet<ExpensesType> ExpensesTypes { get; set; }
        public virtual DbSet<InvestmentsRecord> InvestmentsRecords { get; set; }
        public virtual DbSet<LoanRecord> LoanRecords { get; set; }
        public virtual DbSet<MailTemplate> MailTemplates { get; set; }
        public virtual DbSet<OwnerCompanyLink> OwnerCompanyLinks { get; set; }
        public virtual DbSet<OwnerRecord> OwnerRecords { get; set; }
        public virtual DbSet<PaymentRecord> PaymentRecords { get; set; }
        public virtual DbSet<PropertiesRecord> PropertiesRecords { get; set; }
        public virtual DbSet<Tenant> Tenants { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
    
        public virtual ObjectResult<GetAllLeasePaymentForMainChartForAdmin_Result> GetAllLeasePaymentForMainChartForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLeasePaymentForMainChartForAdmin_Result>("GetAllLeasePaymentForMainChartForAdmin");
        }
    
        public virtual ObjectResult<GetAllLeasePaymentForMainChartForCompany_Result> GetAllLeasePaymentForMainChartForCompany(Nullable<long> companyId, Nullable<long> userId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLeasePaymentForMainChartForCompany_Result>("GetAllLeasePaymentForMainChartForCompany", companyIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetAllLeasePaymentForMainChartForUser_Result> GetAllLeasePaymentForMainChartForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLeasePaymentForMainChartForUser_Result>("GetAllLeasePaymentForMainChartForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartLastMonthForAdmin_Result> GetAllPropertyInfoForExpenseChartLastMonthForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartLastMonthForAdmin_Result>("GetAllPropertyInfoForExpenseChartLastMonthForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartLastMonthForCompany_Result> GetAllPropertyInfoForExpenseChartLastMonthForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartLastMonthForCompany_Result>("GetAllPropertyInfoForExpenseChartLastMonthForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartLastMonthForUser_Result> GetAllPropertyInfoForExpenseChartLastMonthForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartLastMonthForUser_Result>("GetAllPropertyInfoForExpenseChartLastMonthForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartLastYearForAdmin_Result> GetAllPropertyInfoForExpenseChartLastYearForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartLastYearForAdmin_Result>("GetAllPropertyInfoForExpenseChartLastYearForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartLastYearForCompany_Result> GetAllPropertyInfoForExpenseChartLastYearForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartLastYearForCompany_Result>("GetAllPropertyInfoForExpenseChartLastYearForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartLastYearForUser_Result> GetAllPropertyInfoForExpenseChartLastYearForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartLastYearForUser_Result>("GetAllPropertyInfoForExpenseChartLastYearForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartThisMonthForAdmin_Result> GetAllPropertyInfoForExpenseChartThisMonthForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartThisMonthForAdmin_Result>("GetAllPropertyInfoForExpenseChartThisMonthForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartThisMonthForCompany_Result> GetAllPropertyInfoForExpenseChartThisMonthForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartThisMonthForCompany_Result>("GetAllPropertyInfoForExpenseChartThisMonthForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseChartThisMonthForUser_Result> GetAllPropertyInfoForExpenseChartThisMonthForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseChartThisMonthForUser_Result>("GetAllPropertyInfoForExpenseChartThisMonthForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseTableForAdmin_Result> GetAllPropertyInfoForExpenseTableForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseTableForAdmin_Result>("GetAllPropertyInfoForExpenseTableForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseTableForAdminWithDateRange_Result> GetAllPropertyInfoForExpenseTableForAdminWithDateRange(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseTableForAdminWithDateRange_Result>("GetAllPropertyInfoForExpenseTableForAdminWithDateRange", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseTableForCompany_Result> GetAllPropertyInfoForExpenseTableForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseTableForCompany_Result>("GetAllPropertyInfoForExpenseTableForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseTableForCompanyWithDateRange_Result> GetAllPropertyInfoForExpenseTableForCompanyWithDateRange(Nullable<long> companyId, Nullable<long> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseTableForCompanyWithDateRange_Result>("GetAllPropertyInfoForExpenseTableForCompanyWithDateRange", companyIdParameter, userIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForExpenseTableForUser_Result> GetAllPropertyInfoForExpenseTableForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForExpenseTableForUser_Result>("GetAllPropertyInfoForExpenseTableForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartLastMonthForAdmin_Result> GetAllPropertyInfoForIncomeChartLastMonthForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartLastMonthForAdmin_Result>("GetAllPropertyInfoForIncomeChartLastMonthForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartLastMonthForCompany_Result> GetAllPropertyInfoForIncomeChartLastMonthForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartLastMonthForCompany_Result>("GetAllPropertyInfoForIncomeChartLastMonthForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartLastMonthForUser_Result> GetAllPropertyInfoForIncomeChartLastMonthForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartLastMonthForUser_Result>("GetAllPropertyInfoForIncomeChartLastMonthForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartLastYearForAdmin_Result> GetAllPropertyInfoForIncomeChartLastYearForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartLastYearForAdmin_Result>("GetAllPropertyInfoForIncomeChartLastYearForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartLastYearForCompany_Result> GetAllPropertyInfoForIncomeChartLastYearForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartLastYearForCompany_Result>("GetAllPropertyInfoForIncomeChartLastYearForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartLastYearForUser_Result> GetAllPropertyInfoForIncomeChartLastYearForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartLastYearForUser_Result>("GetAllPropertyInfoForIncomeChartLastYearForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartThisMonthForAdmin_Result> GetAllPropertyInfoForIncomeChartThisMonthForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartThisMonthForAdmin_Result>("GetAllPropertyInfoForIncomeChartThisMonthForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartThisMonthForCompany_Result> GetAllPropertyInfoForIncomeChartThisMonthForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartThisMonthForCompany_Result>("GetAllPropertyInfoForIncomeChartThisMonthForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeChartThisMonthForUser_Result> GetAllPropertyInfoForIncomeChartThisMonthForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeChartThisMonthForUser_Result>("GetAllPropertyInfoForIncomeChartThisMonthForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeTableForAdmin_Result> GetAllPropertyInfoForIncomeTableForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeTableForAdmin_Result>("GetAllPropertyInfoForIncomeTableForAdmin");
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeTableForAdminWithDateRange_Result> GetAllPropertyInfoForIncomeTableForAdminWithDateRange(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeTableForAdminWithDateRange_Result>("GetAllPropertyInfoForIncomeTableForAdminWithDateRange", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeTableForCompany_Result> GetAllPropertyInfoForIncomeTableForCompany(Nullable<long> companyId, Nullable<long> userID)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeTableForCompany_Result>("GetAllPropertyInfoForIncomeTableForCompany", companyIdParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeTableForCompanyWithDateRange_Result> GetAllPropertyInfoForIncomeTableForCompanyWithDateRange(Nullable<long> companyId, Nullable<long> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeTableForCompanyWithDateRange_Result>("GetAllPropertyInfoForIncomeTableForCompanyWithDateRange", companyIdParameter, userIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllPropertyInfoForIncomeTableForUser_Result> GetAllPropertyInfoForIncomeTableForUser(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPropertyInfoForIncomeTableForUser_Result>("GetAllPropertyInfoForIncomeTableForUser", userIDParameter);
        }
    }
}
